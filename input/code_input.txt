openapi: 3.1.0
info:
  title: Audit Service
  version: '1.0'
  summary: Service for auditing smart contracts
  description: Service for auditing smart contracts
servers:
  - url: 'http://localhost:8080'
paths:
  '/mythril/module/{moduleTemplateID}/{version}':
    post:
      operationId: startMythrilAnalysisForVersion
      summary: Initiates an audit for a given module template and version
      parameters:
        - name: moduleTemplateID
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Audit initiated
          content:
            text/plain:
              schema:
                type: string
                example: "Started analysis"
        '409':
          description: Audit already in progress
          content:
            text/plain:
            schema:
              type: string
              example: "Analysis already started"
    get:
      operationId: fetchMythrilAnalysisForVersion
      summary: Fetches the audit analysis for a given module template and version
      parameters:
        - name: moduleTemplateID
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit analysis data
          content:
            application/json:
              schema:
                type: object
                properties:
                  startedAt:
                    type: string
                    example: "2023-01-01T00:00:00Z"
                  expectedAt:
                    type: string
                    example: "2023-01-01T00:05:00Z"
                  analysis:
                    type: string
                    example: "Analysis output..."
        '404':
          description: Audit not found
          content:
            text/plain:
            schema:
              type: object
              properties:
                startedAt:
                  type: string
                  example: ""
                expectedAt:
                  type: string
                  example: ""
                analysis:
                  type: string
                  example: ""
  '/mythril/bytecode/bytecode/{contractAddress}/{chainId}':
    post:
      operationId: StartMythrilAnalysisForContract
      summary: Initiates a Mythril analysis for a given contract bytecode
      parameters:
        - name: contractAddress
          in: path
          required: true
          schema:
            type: string
        - name: chainId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bytecode:
                  type: string
      responses:
        '202':
          description: Analysis initiated
          content:
            text/plain:
              schema:
                type: string
                example: "Started analysis"
        '409':
            description: Analysis already in progress
            content:
                text/plain:
                schema:
                type: string
                example: "Analysis already started"
    get:
      operationId: FetchMythrilAnalysisForContract
      summary: Fetches the Mythril analysis results for a given contract bytecode
      parameters:
        - name: contractAddress
          in: path
          required: true
          schema:
            type: string
        - name: chainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Analysis data
          content:
            application/json:
              schema:
                type: object
                properties:
                  startedAt:
                    type: string
                    example: "2023-01-01T00:00:00Z"
                  expectedAt:
                    type: string
                    example: "2023-01-01T00:05:00Z"
                  analysis:
                    type: string
                    example: "Analysis output..."
        '404':
            description: Analysis not found
            content:
                text/plain:
                schema:
                type: object
                properties:
                    startedAt:
                      type: string
                      example: ""
                    expectedAt:
                      type: string
                      example: ""
                    analysis:
                      type: string
                      example: ""
  /slither/analyze/{contractAddress}/{chainId}:
    post:
      operationId: StartSlitherAnalysisForContract
      summary: Initiates a Slither analysis for a given contract
      parameters:
        - name: contractAddress
          in: path
          required: true
          schema:
            type: string
        - name: chainId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                solidityVersion:
                  type: string
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      path:
                        type: string
                      content:
                        type: string
                    required:
                      - name
                      - path
                      - content
                rootContractPath:
                  type: string
      description: The smart contract files, the root contract path, and the Solidity version
      responses:
        '202':
          description: Analysis initiated
          content:
            text/plain:
              schema:
                type: string
                example: "Started analysis"
        '409':
          description: Analysis already in progress
          content:
            text/plain:
            schema:
            type: string
            example: "Analysis already started"
    get:
        operationId: FetchSlitherAnalysisForContract
        summary: Fetches the Slither analysis results for a given contract
        parameters:
            - name: contractAddress
              in: path
              required: true
              schema:
                  type: string
            - name: chainId
              in: path
              required: true
              schema:
                  type: string
        responses:
          '200':
            description: Analysis data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    startedAt:
                      type: string
                      example: "2023-01-01T00:00:00Z"
                    expectedAt:
                      type: string
                      example: "2023-01-01T00:05:00Z"
                    analysis:
                      type: string
                      example: "Analysis output..."
          '404':
            description: Analysis not found
            content:
              text/plain:
              schema:
              type: object
              properties:
                startedAt:
                  type: string
                  example: ""
                expectedAt:
                  type: string
                  example: ""
                analysis:
                  type: string
                  example: ""
  /llm/{contractAddress}/{chainId}:
    post:
      operationId: StartSummaryViaLLM
      summary: Summarizes the contract details using LLM
      parameters:
        - name: contractAddress
          in: path
          required: true
          schema:
            type: string
        - name: chainId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
      description: Requires the contract address and chain ID as parameters in the URL
      responses:
        '202':
            description: Analysis initiated
            content:
                text/plain:
                schema:
                    type: string
                    example: "Started analysis"
        '409':
            description: Analysis already in progress
            content:
                text/plain:
                schema:
                    type: string
                    example: "Analysis already started"
    get:
        operationId: FetchSummaryViaLLM
        summary: Fetches the LLM analysis results for a given contract
        parameters:
            - name: contractAddress
              in: path
              required: true
              schema:
                type: string
            - name: chainId
              in: path
              required: true
              schema:
                type: string
        responses:
          '200':
            description: Analysis data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    startedAt:
                      type: string
                      example: "2023-01-01T00:00:00Z"
                    expectedAt:
                      type: string
                      example: "2023-01-01T00:05:00Z"
                    analysis:
                      type: string
                      example: "Analysis output..."
          '404':
            description: Analysis not found
            content:
              text/plain:
              schema:
              type: object
              properties:
                startedAt:
                  type: string
                  example: ""
                expectedAt:
                  type: string
                  example: ""
                analysis:
                  type: string
                  example: ""